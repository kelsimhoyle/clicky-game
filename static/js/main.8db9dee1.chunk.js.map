{"version":3,"sources":["images/manatee1.jpg","images/manatee2.jpg","images/manatee3.jpg","images/manatee4.jpg","images/manatee5.jpg","images/manatee6.jpg","images/manatee7.jpg","images/manatee8.jpg","images/manatee9.jpg","images/manatee10.jpg","images/manatee11.jpg","images/manatee12.jpg","images/index.js","componenets/ManateeCard/index.js","componenets/Score/index.js","componenets/Header/index.js","componenets/Footer/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","images","manatee1","manatee2","manatee3","manatee4","manatee5","manatee6","manatee7","manatee8","manatee9","manatee10","manatee11","manatee12","ManateeCard","props","className","gameLost","alt","id","src","image","onClick","clicked","loseGame","handleClick","bind","this","Score","highScore","correct","score","Header","Footer","href","App","state","manatees","count","console","log","setState","map","manatee","shuffleCards","array","tempValue","randomIndex","currentIndex","length","Math","floor","random","shuffledManateees","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8db9dee1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/manatee1.5756eb16.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee2.baeaf58c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee3.3b494f69.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee4.e2b1d8ea.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee5.b54016b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee6.9e0cea98.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee7.26a1589b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee8.dfb7d805.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee9.3baa8334.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee10.e149b093.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee11.23fb18af.jpg\";","module.exports = __webpack_public_path__ + \"static/media/manatee12.9b9ebbce.jpg\";","import manatee1 from \"./manatee1.jpg\";\nimport manatee2 from \"./manatee2.jpg\";\nimport manatee3 from \"./manatee3.jpg\";\nimport manatee4 from \"./manatee4.jpg\";\nimport manatee5 from \"./manatee5.jpg\";\nimport manatee6 from \"./manatee6.jpg\";\nimport manatee7 from \"./manatee7.jpg\";\nimport manatee8 from \"./manatee8.jpg\";\nimport manatee9 from \"./manatee9.jpg\";\nimport manatee10 from \"./manatee10.jpg\";\nimport manatee11 from \"./manatee11.jpg\";\nimport manatee12 from \"./manatee12.jpg\";\n\nconst images = [manatee1, manatee2, manatee3, manatee4, manatee5, manatee6, manatee7, manatee8, manatee9, manatee10, manatee11, manatee12];\n\nexport default images;","import React from \"react\";\nimport \"./style.css\";\n\nfunction ManateeCard(props) {\n  return (\n    <div className=\"col-md-3\">\n    <div className={`card ${props.gameLost ? \"shake\" : \"\"}`}>\n    <div className=\"img-container\">\n        <img \n        alt={props.id} \n        src={props.image} \n        onClick={props.clicked ? props.loseGame : props.handleClick.bind(this, props.id)} \n        />\n        </div>\n    </div>\n    </div>\n  );\n}\n\nexport default ManateeCard;","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n    return(\n        <nav className=\"navbar sticky-top navbar-light bg-light\">\n        <h2>High Score: {props.highScore}</h2>\n        {props.correct === null ? \n        (<h2>Click a manatee to start the game!</h2>) :\n        (<h2>{props.correct ? \"You guessed correctly!\" : \"You guessed incorrectly.\"}</h2>)}\n        <h2>Current Score: {props.score}</h2>\n        </nav>\n    )\n}\n\nexport default Score;","import React from \"react\";\nimport \"./style.css\";\n\nconst Header = () => {\n    return (\n        <>\n            <div className=\"jumbotron jumbotron-fluid mb-0\">\n                <div className=\"container\">\n                    <h1>Manatee Clicky Game</h1>\n                    <p>To score, click a new manatee each turn.</p>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Header;","import React from 'react'\n\nconst Footer = () => (\n    <footer className=\"page-footer font-small blue\">\n  <div className=\"footer-copyright text-center py-3\">Created by Kelsi Hoyle:\n    <a href=\"https://github.com/kelsimhoyle\"> GitHub</a>\n  </div>\n</footer>\n)\n\nexport default Footer;","import React, { Component } from \"react\";\nimport manatees from \"./manatee.json\";\nimport images from \"./images\";\nimport ManateeCard from \"./componenets/ManateeCard\";\nimport Score from \"./componenets/Score\";\nimport Header from \"./componenets/Header\";\nimport Footer from \"./componenets/Footer\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    manatees,\n    count: 0,\n    highScore: 0,\n    correct: null,\n    gameLost: false\n  }\n\n  handleClick = (id) => {\n    console.log(id);\n    this.setState({\n      manatees: this.state.manatees.map(manatee => {\n        if (manatee.id === id) {\n          manatee.clicked = true\n        }\n        return manatee;\n      }),\n      count: this.state.count + 1,\n      highScore: (this.state.highScore < this.state.count + 1 ? this.state.count + 1 : this.state.highScore),\n      correct: true,\n      gameLost: false\n    });\n  }\n\n  shuffleCards = (array) => {\n    let currentIndex = array.length;\n    let tempValue, randomIndex;\n\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      tempValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = tempValue;\n    }\n    return array;\n  }\n\n  loseGame = () => {\n    this.setState({\n      manatees: [...this.state.manatees.map(manatee => {\n        manatee.clicked = false\n        return manatee\n      })],\n      count: 0, \n      correct: false,\n      gameLost: true\n    })\n  }\n\n  render() {\n    let shuffledManateees = this.shuffleCards(this.state.manatees);\n    return (\n      <>\n        <Header />\n        <Score score={this.state.count} highScore={this.state.highScore} correct={this.state.correct} />\n        <main className=\"container\">\n          <div className=\"row\">\n            {shuffledManateees.map((manatee) => (\n              <ManateeCard\n                image={images[manatee.id - 1]}\n                key={manatee.id}\n                clicked={manatee.clicked}\n                id={manatee.id}\n                gameLost={this.state.gameLost}\n                handleClick={this.handleClick}\n                loseGame={this.loseGame}\n              />\n            ))}\n          </div>\n        </main>\n        <Footer />\n      </>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}